from tkinter import *
import math
import time
from datetime import datetime
from PIL import ImageTk, Image

# ---------------------------- CONSTANTS ------------------------------- #
PINK = "#e2979c"
RED = "#e7305b"
GREEN = "#9bdeac"
YELLOW = "#f7f5dd"
FONT_NAME = "Courier"
WORK_MIN = 25
SHORT_BREAK_MIN = 5
LONG_BREAK_MIN = 10
REP = 0
number = 5
a = 50
timer = None
work_number=None
marks=""


# ---------------------------- TIMER RESET ------------------------------- #

# ---------------------------- TIMER MECHANISM ------------------------------- #
def another_checkbox():
    pass
    # global a
    # a+=1
    # check_marks = Label(text="ðŸ—¸", bg=GREEN, fg=RED)
    # check_marks.grid(column=1, row=a)


def count_down(count):
    global number
    global timer
    global work_number
    global a
    global marks

    min = math.floor(count / 60)
    sec = count % 60
    if sec <= 9:
        sec = f"0{sec}"

    canvas.itemconfig(timer_text, text=f'{min}:{sec}')
    if count >= 0:
        timer = window.after(1000, count_down, count - 1)
    else:
        # TODO everytime the countdown completes. the else statement will be executed

        start_timer()
        marks=" "
        work_number=math.floor(REP/2)
        for _ in range(work_number):
            marks+="ðŸ—¸"
            check_marks.config(text=marks)


            # check_marks["text"] = "ðŸ—¸"

        # if REP%2==0:
        #     a=50
        #     check_marks.config(text="ðŸ—¸",fg=RED,bg=GREEN)
        #     check_marks.place(x=300,y=300+a)
        #     a+=50

        # window.after(1000, on_start, count - 1)

    # now one timer is completed, time to get another checkbox


def on_reset():
    window.after_cancel(timer)
    canvas.itemconfig(timer_text,text="00:00")
    name["text"] = "TIMER"
    check_marks.config(text=" ")
    global REP
    REP=0

    # timer_text = canvas.create_text(200, 170, text=f"00:00", fill='white', font=("Arial", 30, "bold"))
    # # canvas.create_text(190,40,text="TIMER",fill=GREEN,font=("Arial",20,"italic"))
    # canvas.grid(column=1, row=2)


    # if REP==0:
    #     print("This")
    #     on_start(work_second)
    #
    #     on_start(short_break_second)
    # on_start(long_break_second)


# ---------------------------- COUNTDOWN MECHANISM ------------------------------- #


# ---------------------------- UI SETUP ------------------------------- #
def start_timer():
    global REP
    REP += 1
    # a=0
    # global a

    # todo trying to get the label

    work_second = WORK_MIN * 60
    short_break_second = SHORT_BREAK_MIN * 60
    long_break_second = LONG_BREAK_MIN * 60
    if REP % 8 == 0:
        count_down(long_break_second)
        name["text"] = "LONG BREAK"
        name["fg"] = RED
        another_checkbox()
    elif REP % 2 == 0:
        count_down(short_break_second)
        name["text"] = " SHORT BREAK"
        name["fg"] = 'green'
        another_checkbox()

        # check_marks.config(text="ðŸ—¸", fg=YELLOW, bg=GREEN)
        # # a += 1
        # print("Test")
        # print(a)
        # check_marks.grid(column=1,row=a)
        # a+=1


    else:
        count_down(work_second)
        name["text"] = "WORK!"
        name["fg"] = RED


# todo getting the window
window = Tk()
window.title("POMODORO")
window.minsize(width=400, height=400)
window.config(padx=10, pady=10, bg=PINK)

# todo creating label
name = Label(text="Timer", fg=GREEN, bg=PINK, font=("Arial", 30, "italic"))
name.grid(column=1, row=0)

# todo canvas art
canvas = Canvas(width=400, height=400, bg=PINK, highlightthickness=0)
tomato_img = PhotoImage(file="tomato.png")
canvas.create_image(200, 150, image=tomato_img)

timer_text = canvas.create_text(200, 170, text=f"00:00", fill='white', font=("Arial", 30, "bold"))
# canvas.create_text(190,40,text="TIMER",fill=GREEN,font=("Arial",20,"italic"))
canvas.grid(column=1, row=2)
# hint: use canvas only or else.. it be taken as other componennt.. and will divide the column and row, among
# todo getting the start button
start = Button(text="start", bg=GREEN, font=("Arial", 10, "bold"), command=start_timer)
start.place(x=60, y=300)
stop = Button(text="reset", bg=GREEN, font=("Arial", 10, "bold"), command=on_reset)
stop.place(x=300, y=300)
# # todo check marks
# check_marks = Label(text=" ")
check_marks = Label(text=" ",bg=PINK, fg=RED,font=("Arial",30,"italic"))
check_marks.grid(column=1, row=3)
# check_marks.grid(column=1, row=3)

print(REP)

window.mainloop()
